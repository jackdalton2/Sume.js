{"version":3,"sources":["webpack://sume/./src/index.js","webpack://sume/./src/parser.js","webpack://sume/./src/compiler.js","webpack://sume/webpack/bootstrap","webpack://sume/webpack/startup"],"names":["parser","compiler","Sume","module","exports","compile","template","t","context","blocks","version","blockBegin","blockEnd","length","escaped","i","j","scan","slice","SyntaxError","flag","spaces","split","replace","push","indices","stripped","stop","totalLenDifference","shift","path","val","undefined","String","e","ReferenceError","substring","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__"],"mappings":"uBAAA,MAAMA,EAAS,EAAQ,GACjBC,EAAW,EAAQ,GAEzBC,KAAOC,EAAOC,QAAU,CACpBC,QAAS,SAASC,GACd,MAAMC,EAAIP,EAAOM,GACjB,OAAQE,GAAYP,EAASM,EAAED,SAAUC,EAAEE,OAAQD,IAEvDE,QAAS,U,ICRbP,EAAOC,QAAU,SAASE,GAKtB,IAAIG,EAAS,GACTE,EAAa,KACbC,EAAW,KACXC,EAASP,EAASO,OAAS,EAC3BC,GAAU,EAEd,IAAK,IAAIC,EAAI,EAAGC,EAAI,EAAGD,EAAIF,EAAQE,IAAKC,IAAK,CACzC,IAAIC,EAAOX,EAASS,GAAKT,EAASU,GAQlC,GAjBe,MAUXV,EAASS,EAAI,KACbT,EAAWA,EAASY,MAAM,EAAGH,EAAI,GAAKT,EAASY,MAAMH,GACrDD,GAAU,GAdK,MAgBfG,GAA2BH,IAC3BH,EAAaI,EAAI,GAhBJ,MAkBbE,IAAyBH,EAAS,CAClC,GAAkB,MAAdH,EACA,MAAM,IAAIQ,YAAY,yCAA+DJ,GAEzFH,EAAWG,EAKf,GA3BiB,MAwBbE,GAAwBH,IACxBA,GAAU,GAEI,MAAdH,GAAkC,MAAZC,EAAkB,CACxC,IAAIQ,EAAOd,EAASY,MAAMP,EAAYC,GAClCS,EAASD,EAAKE,MAAM,KAAKT,OAAS,EAEtC,GADAO,EAAOA,EAAKG,QAAQ,OAAQ,IAChB,IAARH,EACA,MAAM,IAAID,YAAY,2BAA6BR,EAAa,IAEpEF,EAAOe,KAAK,CACRC,QAAS,CAACd,EAAa,EAAGC,EAAW,GACrCQ,KAAMA,EACNM,SAAUL,IAEdV,EAAa,KACbC,EAAW,KAEf,GAAII,GAAKH,GAAwB,MAAdF,GAAkC,MAAZC,EACrC,MAAM,IAAIO,YAAY,0CAAkER,EAAa,IAM7G,OAFAE,EAAS,KAEF,CACHJ,OAAQA,EAAOI,OAAS,GAAIJ,EAC5BH,SAAUA,K,ICrDlBH,EAAOC,QAAU,SAASE,EAAUG,EAAQD,GACxC,GAAc,GAAVC,EACA,OAAOH,EAGX,IAAIO,EAASJ,EAAOI,OAChBc,EAAOlB,EAAOI,OAAS,EACvBe,EAAqB,EACrBC,EAAQ,CAAC,CAAC,EAAG,IAEjB,IAAK,IAAId,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC7B,IAAIe,EAAOrB,EAAOM,GAAGK,KAAKE,MAAM,KAC5BS,EAAMvB,EAEV,IAAK,IAAIQ,KAAKc,EACVC,EAAMA,EAAID,EAAKd,IAGRgB,MAAPD,IACAA,EAAME,OAAOF,IAGjB,IACIA,EAAMA,EAAIR,QAAQ,MAAO,SACpBA,QAAQ,MAAO,QACfA,QAAQ,MAAO,QACfA,QAAQ,MAAO,UACfA,QAAQ,MAAO,SACtB,MAAOW,GACL,MAAM,IAAIC,eAAe,wBAA2B1B,EAAOM,GAAGK,KAAO,KAGrEL,EAAIY,IACJC,GAAsBG,EAAIlB,OAAS,EAAIJ,EAAOM,GAAGK,KAAKP,OAASJ,EAAOM,GAAGW,SAEzEG,EAAML,KAAK,CACPI,EACAA,KAGRtB,EAAWA,EAAS8B,UAAU,EAAG3B,EAAOM,GAAGU,QAAQ,GAAKI,EAAMd,GAAG,IAAMgB,EAAMzB,EAAS8B,UAAU3B,EAAOM,GAAGU,QAAQ,GAAKI,EAAMd,GAAG,IAKpI,OAFAF,EAAS,KAEFP,KC5CP+B,EAA2B,IAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUnC,QAG3C,IAAID,EAASkC,EAAyBE,GAAY,CAGjDnC,QAAS,IAOV,OAHAoC,EAAoBD,GAAUpC,EAAQA,EAAOC,QAASkC,GAG/CnC,EAAOC,QCjBfkC,CAAoB,I","file":"sume.min.js","sourcesContent":["const parser = require(\"./parser.js\");\nconst compiler = require(\"./compiler.js\")\n\nSume = module.exports = {\n    compile: function(template) {\n        const t = parser(template);\n        return (context) => compiler(t.template, t.blocks, context);\n    },\n    version: \"1.2.1\"\n};\n","module.exports = function(template) {\n    const delimiterStart = \"{{\";\n    const delimiterEnd = \"}}\";\n    const escapeChar = \"\\\\\";\n\n    let blocks = [];\n    let blockBegin = null\n    let blockEnd = null;\n    let length = template.length - 1;\n    let escaped = false;\n\n    for (let i = 0, j = 1; i < length; i++, j++) {\n        let scan = template[i] + template[j];\n        if (template[i - 1] == escapeChar) {\n            template = template.slice(0, i - 1) + template.slice(i);\n            escaped = true;\n        }\n        if (scan == delimiterStart && !escaped) {\n            blockBegin = i + 2;\n        }\n        if (scan == delimiterEnd && !escaped) {\n            if (blockBegin == null) {\n                throw new SyntaxError(\"Unexpected delimiter \\\"\" + delimiterEnd + \"\\\" at position \" + i);\n            }\n            blockEnd = i;\n        }\n        if (scan == delimiterEnd && escaped) {\n            escaped = false;\n        }\n        if (blockBegin != null && blockEnd != null) {\n            let flag = template.slice(blockBegin, blockEnd);\n            let spaces = flag.split(\" \").length - 1;\n            flag = flag.replace(/\\s+/g, \"\");\n            if (flag == \"\") {\n                throw new SyntaxError(\"Empty tags at position \" + (blockBegin - 2));\n            }\n            blocks.push({\n                indices: [blockBegin - 2, blockEnd + 2],\n                flag: flag,\n                stripped: spaces\n            });\n            blockBegin = null;\n            blockEnd = null;\n        }\n        if (j == length && blockBegin != null && blockEnd == null) {\n            throw new SyntaxError(\"Unexpected delimiter \\\"\" + delimiterStart + \"\\\" at position \" + (blockBegin - 2));\n        }\n    }\n\n    length = null;\n    \n    return {\n        blocks: blocks.length > 0 ? blocks : false,\n        template: template\n    };\n};\n","module.exports = function(template, blocks, context) {\n    if (blocks == false) {\n        return template;\n    }\n\n    let length = blocks.length;\n    let stop = blocks.length - 1;\n    let totalLenDifference = 0;\n    let shift = [[0, 0]];\n\n    for (let i = 0; i < length; i++) {\n        let path = blocks[i].flag.split(\".\");\n        let val = context;\n\n        for (let j in path) {\n            val = val[path[j]];\n        }\n\n        if (val != undefined) {\n            val = String(val);\n        }\n\n        try {\n            val = val.replace(/\\&/g, '&amp;')\n                .replace(/\\</g, '&lt;')\n                .replace(/\\>/g, '&gt;')\n                .replace(/\\\"/g, '&quot;')\n                .replace(/\\'/g, '&#x27');\n        } catch (e) {\n            throw new ReferenceError(\"Unknown context key \\\"\" + blocks[i].flag + \"\\\"\");\n        }\n\n        if (i < stop) {\n            totalLenDifference += val.length - 4 - blocks[i].flag.length - blocks[i].stripped;\n            let next = i + 1;\n            shift.push([\n                totalLenDifference,\n                totalLenDifference\n            ]);\n        }\n        template = template.substring(0, blocks[i].indices[0] + shift[i][0]) + val + template.substring(blocks[i].indices[1] + shift[i][1]);\n    }\n\n    length = null;\n\n    return template;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module\n// This entry module is referenced by other modules so it can't be inlined\n__webpack_require__(0);\n"],"sourceRoot":""}